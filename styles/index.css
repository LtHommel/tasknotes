/* 
   TaskNotes Plugin Styles - Source Index
   
   This file serves as documentation for the CSS build system.
   The actual styles.css file is generated by concatenating these files in order:
   
   1. variables.css - CSS custom properties and design system variables
   2. base.css - Basic styles, animations, card components, and layout
   3. components.css - Reusable UI components, utilities, and modals
   4. calendar.css - Calendar view specific styles
   5. tasks.css - Task list and task item specific styles
   6. kanban.css - Kanban board view specific styles
   7. filters.css - Unified filtering system styles
   
   To build the final styles.css file, run:
   npm run build-css
   
   During development, both 'npm run dev' and 'npm run build' will automatically
   build the CSS before running the main build process.
   
   === File Descriptions ===
   
   variables.css:
   - CSS custom properties for spacing, colors, typography
   - Design system tokens
   - Global CSS variables used throughout the application
   
   base.css:
   - Foundational styles and animations
   - Base card component classes using BEM methodology
   - Accessibility styles and reduced motion support
   - Loading states and transitions
   
   components.css:
   - Reusable UI components (buttons, modals, forms)
   - Utility classes (.is-hidden, .is-loading, etc.)
   - General component styles used across views
   - Tab system and main content area
   
   calendar.css:
   - Calendar grid layout and navigation
   - Day indicators and content visualization
   - Calendar view specific controls
   - Month/week view styling
   
   tasks.css:
   - Task list layouts and card styling
   - Task metadata, priority indicators, status badges
   - Task controls (dropdowns, buttons, inputs)
   - Time tracking and recurring task styles
   
   kanban.css:
   - Kanban board layout and column styling
   - Drag and drop visual feedback
   - Board filtering and configuration
   - Responsive kanban design
   
   filters.css:
   - Unified filtering system across all views
   - Filter bar layouts and controls
   - Advanced filtering panels
   - Multi-select and dropdown components
   
   === Development Workflow ===
   
   1. Edit the appropriate CSS file in the styles/ directory
   2. Run 'npm run build-css' to regenerate styles.css
   3. Test your changes in the application
   4. Commit both the source files and the generated styles.css
   
   The build process ensures that:
   - Variables are loaded first for use in all other files
   - Base styles are applied before component-specific styles
   - View-specific styles don't conflict with each other
   - The final CSS is properly ordered and documented
*/

/* This file is for documentation only - it is not included in the build */